{"ast":null,"code":"var _jsxFileName = \"/home/ramegp/Coder/React/context/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport { StateProvider } from \"./provider/provider\";\nimport reducer, { initialState } from \"./provider/reducer\";\nimport { actionTypes } from \"./provider/reducer\";\nimport { useStateValue } from \"./provider/provider\";\n/* function reducer(state, action) {\n  switch (action.type) {\n    case \"add-todo\":\n      return {\n        todos: [...state.todos, { text: action.text, completed: false }],\n        todoCount: state.todoCount + 1\n      };\n    case \"toggle-todo\":\n      return {\n        todos: state.todos.map((t, idx) =>\n          idx === action.idx ? { ...t, completed: !t.completed } : t\n        ),\n        todoCount: state.todoCount\n      };\n    default:\n      return state;\n  }\n} */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [{\n    todos,\n    todoCount\n  }, dispatch] = useStateValue();\n  const [text, setText] = useState();\n  return /*#__PURE__*/_jsxDEV(StateProvider, {\n    initialState: initialState,\n    reducer: reducer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          console.log(text);\n          dispatch({\n            type: \"add-todo\",\n            text\n          });\n          setText(\"\");\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number of todos: \", todoCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), todos.map((t, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => dispatch({\n          type: \"toggle-todo\",\n          idx\n        }),\n        style: {\n          textDecoration: t.completed ? \"line-through\" : \"\"\n        },\n        children: [t.text, /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, t.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mOO71nwroFVcg/UsIjVEjPNizB0=\", false, function () {\n  return [useStateValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ramegp/Coder/React/context/src/App.js"],"names":["React","useReducer","useState","StateProvider","reducer","initialState","actionTypes","useStateValue","App","todos","todoCount","dispatch","text","setText","e","preventDefault","console","log","type","target","value","map","t","idx","textDecoration","completed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,OAAP,IAAiBC,YAAjB,QAAoC,oBAApC;AAGA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAuBC,QAAvB,IAAmCJ,aAAa,EAAtD;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AAEA,sBACE,QAAC,aAAD;AAAe,IAAA,YAAY,EAAEG,YAA7B;AAA2C,IAAA,OAAO,EAAED,OAApD;AAAA,2BACA;AAAA,8BACE;AACE,QAAA,QAAQ,EAAEU,CAAC,IAAI;AACbA,UAAAA,CAAC,CAACC,cAAF;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAD,UAAAA,QAAQ,CAAC;AAAEO,YAAAA,IAAI,EAAE,UAAR;AAAoBN,YAAAA;AAApB,WAAD,CAAR;AACAC,UAAAA,OAAO,CAAC,EAAD,CAAP;AACD,SANH;AAAA,+BAQE;AAAO,UAAA,KAAK,EAAED,IAAd;AAAoB,UAAA,QAAQ,EAAEE,CAAC,IAAID,OAAO,CAACC,CAAC,CAACK,MAAF,CAASC,KAAV;AAA1C;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,wCAAuBV,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,EAYGD,KAAK,CAACY,GAAN,CAAU,CAACC,CAAD,EAAIC,GAAJ,kBACT;AAEE,QAAA,OAAO,EAAE,MAAMZ,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAE,aAAR;AAAuBK,UAAAA;AAAvB,SAAD,CAFzB;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,cAAc,EAAEF,CAAC,CAACG,SAAF,GAAc,cAAd,GAA+B;AAD1C,SAHT;AAAA,mBAOGH,CAAC,CAACV,IAPL,eASE;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SACOU,CAAC,CAACV,IADT;AAAA;AAAA;AAAA;AAAA,cADD,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAvCD;;GAAMJ,G;UAEqCD,a;;;KAFrCC,G;AAyCN,eAAeA,GAAf","sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport { StateProvider } from \"./provider/provider\";\nimport reducer, {initialState} from \"./provider/reducer\";\n\n\nimport { actionTypes } from \"./provider/reducer\";\nimport { useStateValue } from \"./provider/provider\";\n\n/* function reducer(state, action) {\n  switch (action.type) {\n    case \"add-todo\":\n      return {\n        todos: [...state.todos, { text: action.text, completed: false }],\n        todoCount: state.todoCount + 1\n      };\n    case \"toggle-todo\":\n      return {\n        todos: state.todos.map((t, idx) =>\n          idx === action.idx ? { ...t, completed: !t.completed } : t\n        ),\n        todoCount: state.todoCount\n      };\n    default:\n      return state;\n  }\n} */\n\nconst App = () => {\n  \n  const [{ todos, todoCount }, dispatch] = useStateValue();\n\n  const [text, setText] = useState();\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}> \n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          console.log(text)\n          dispatch({ type: \"add-todo\", text });\n          setText(\"\");\n        }}\n      >\n        <input value={text} onChange={e => setText(e.target.value)} />\n      </form>\n      <div>number of todos: {todoCount}</div>\n      {todos.map((t, idx) => (\n        <div\n          key={t.text}\n          onClick={() => dispatch({ type: \"toggle-todo\", idx })}\n          style={{\n            textDecoration: t.completed ? \"line-through\" : \"\"\n          }}\n        >\n          {t.text}\n\n          <label>\n            <input type=\"checkbox\" />\n          </label>\n\n        </div>\n      ))}\n    </div>\n    </StateProvider>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}